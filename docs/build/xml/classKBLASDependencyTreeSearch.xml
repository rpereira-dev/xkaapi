<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classKBLASDependencyTreeSearch" kind="class" language="C++" prot="public">
    <compoundname>KBLASDependencyTreeSearch</compoundname>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>K</declname>
        <defname>K</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classKBLASDependencyTreeSearch_1a21aacda4e65e5f3c0d8ff1ad6e46802a" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <enumvalue id="classKBLASDependencyTreeSearch_1a21aacda4e65e5f3c0d8ff1ad6e46802aa1beeb75ddb7bae10aa892bac94d677e9" prot="public">
          <name>SEARCH_TYPE_RESOLVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classKBLASDependencyTreeSearch_1a21aacda4e65e5f3c0d8ff1ad6e46802aa37c47d151823030b491daf66ff9f576a" prot="public">
          <name>SEARCH_TYPE_CONFLICTING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" line="53" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classKBLASDependencyTreeSearch_1af5c1aa61f446c484b21fe042080db1dc" prot="public" static="no" mutable="no">
        <type>Type</type>
        <definition>Type KBLASDependencyTreeSearch&lt; K &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" line="60" column="14" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKBLASDependencyTreeSearch_1a362ccd67f3ceb54dd99f6f8bff0a15bb" prot="public" static="no" mutable="no">
        <type><ref refid="classaccess__t" kindref="compound">access_t</ref> *</type>
        <definition>access_t* KBLASDependencyTreeSearch&lt; K &gt;::access</definition>
        <argsstring></argsstring>
        <name>access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" line="63" column="19" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKBLASDependencyTreeSearch_1a6f78ea2d4b0722af65d21d4355c61f77" prot="public" static="no" mutable="no">
        <type>std::vector&lt; void * &gt; *</type>
        <definition>std::vector&lt;void *&gt;* KBLASDependencyTreeSearch&lt; K &gt;::conflicts</definition>
        <argsstring></argsstring>
        <name>conflicts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" line="66" column="22" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKBLASDependencyTreeSearch_1a522357e49a8410f1fd9ef366f89c32a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KBLASDependencyTreeSearch&lt; K &gt;::KBLASDependencyTreeSearch</definition>
        <argsstring>()</argsstring>
        <name>KBLASDependencyTreeSearch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" line="69" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classKBLASDependencyTreeSearch_1a91dd9a91ad51b79d91ec625a84cbd325" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KBLASDependencyTreeSearch&lt; K &gt;::~KBLASDependencyTreeSearch</definition>
        <argsstring>()</argsstring>
        <name>~KBLASDependencyTreeSearch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" line="70" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classKBLASDependencyTreeSearch_1a0175332b1d7abfd7ae0343b1242dbd67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KBLASDependencyTreeSearch&lt; K &gt;::prepare_resolve</definition>
        <argsstring>(access_t *access)</argsstring>
        <name>prepare_resolve</name>
        <param>
          <type><ref refid="classaccess__t" kindref="compound">access_t</ref> *</type>
          <declname>access</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" line="75" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classKBLASDependencyTreeSearch_1a82f1c5c3985449179ecfcb97ca8ae374" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KBLASDependencyTreeSearch&lt; K &gt;::prepare_conflicting</definition>
        <argsstring>(std::vector&lt; void * &gt; *conflicts, access_t *access)</argsstring>
        <name>prepare_conflicting</name>
        <param>
          <type>std::vector&lt; void * &gt; *</type>
          <declname>conflicts</declname>
        </param>
        <param>
          <type><ref refid="classaccess__t" kindref="compound">access_t</ref> *</type>
          <declname>access</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" line="82" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" bodystart="82" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>KBLASDependencyTreeSearch&lt; K &gt;</label>
        <link refid="classKBLASDependencyTreeSearch"/>
        <childnode refid="2" relation="usage">
          <edgelabel>access</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>memory_replica_view_t</label>
        <link refid="structmemory__replica__view__t"/>
      </node>
      <node id="5">
        <label>KHyperrect&lt; 1 &gt;</label>
        <link refid="classKHyperrect"/>
      </node>
      <node id="7">
        <label>matrix_tile_t</label>
        <link refid="structmatrix__tile__t"/>
      </node>
      <node id="3">
        <label>task_t</label>
        <link refid="structtask__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>KHyperrect&lt; 2 &gt;</label>
        <link refid="classKHyperrect"/>
      </node>
      <node id="2">
        <label>access_t</label>
        <link refid="classaccess__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>task</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>device_view</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>segment</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>rects</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>host_view</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" line="50" column="1" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp" bodystart="51" bodyend="91"/>
    <listofallmembers>
      <member refid="classKBLASDependencyTreeSearch_1a362ccd67f3ceb54dd99f6f8bff0a15bb" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>access</name></member>
      <member refid="classKBLASDependencyTreeSearch_1a6f78ea2d4b0722af65d21d4355c61f77" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>conflicts</name></member>
      <member refid="classKBLASDependencyTreeSearch_1a522357e49a8410f1fd9ef366f89c32a6" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>KBLASDependencyTreeSearch</name></member>
      <member refid="classKBLASDependencyTreeSearch_1a82f1c5c3985449179ecfcb97ca8ae374" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>prepare_conflicting</name></member>
      <member refid="classKBLASDependencyTreeSearch_1a0175332b1d7abfd7ae0343b1242dbd67" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>prepare_resolve</name></member>
      <member refid="classKBLASDependencyTreeSearch_1a21aacda4e65e5f3c0d8ff1ad6e46802aa37c47d151823030b491daf66ff9f576a" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>SEARCH_TYPE_CONFLICTING</name></member>
      <member refid="classKBLASDependencyTreeSearch_1a21aacda4e65e5f3c0d8ff1ad6e46802aa1beeb75ddb7bae10aa892bac94d677e9" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>SEARCH_TYPE_RESOLVE</name></member>
      <member refid="classKBLASDependencyTreeSearch_1a21aacda4e65e5f3c0d8ff1ad6e46802a" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>Type</name></member>
      <member refid="classKBLASDependencyTreeSearch_1af5c1aa61f446c484b21fe042080db1dc" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>type</name></member>
      <member refid="classKBLASDependencyTreeSearch_1a91dd9a91ad51b79d91ec625a84cbd325" prot="public" virt="non-virtual"><scope>KBLASDependencyTreeSearch</scope><name>~KBLASDependencyTreeSearch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
