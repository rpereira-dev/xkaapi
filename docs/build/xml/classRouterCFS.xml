<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classRouterCFS" kind="class" language="C++" prot="public">
    <compoundname>RouterCFS</compoundname>
    <basecompoundref refid="classRouter" prot="public" virt="non-virtual">Router</basecompoundref>
    <includes refid="router-cfs_8hpp" local="no">router-cfs.hpp</includes>
    <innerclass refid="structRouterCFS_1_1xkrt__router__cfs__map__t" prot="public">RouterCFS::xkrt_router_cfs_map_t</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classRouterCFS_1a5d144169db946e9affd74ca4fbf3a459" prot="public" static="no">
        <type>struct <ref refid="structRouterCFS_1_1xkrt__router__cfs__map__t" kindref="compound">RouterCFS::xkrt_router_cfs_map_t</ref></type>
        <definition>typedef struct RouterCFS::xkrt_router_cfs_map_t RouterCFS::xkrt_router_cfs_map_t</definition>
        <argsstring></argsstring>
        <name>xkrt_router_cfs_map_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" line="53" column="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classRouterCFS_1a57afc95e36e05e9182d4c0dd995f2303" prot="public" static="no" mutable="no">
        <type>const <ref refid="structRouterCFS_1_1xkrt__router__cfs__map__t" kindref="compound">xkrt_router_cfs_map_t</ref></type>
        <definition>const xkrt_router_cfs_map_t RouterCFS::map</definition>
        <argsstring></argsstring>
        <name>map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A graph where weights[i][j] is the weight of the edge between node &apos;i&apos; and &apos;j&apos; If weights[i][j] is UINT8_MAX, then there is no edge If weights[i][j] = weights[i&apos;][j&apos;] / x then the bw on link (i,j) is &apos;x&apos; times greater than the bw of link (i,j) - i.e. the lower weights[i][j] the greater the BW If used[i][j], then a communication is already occuring on link (i,j) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" line="64" column="37" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRouterCFS_1a162600eac29a5df74c2bfe91ec037116" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RouterCFS::RouterCFS</definition>
        <argsstring>(const uint8_t weights[XKRT_DEVICES_MAX][XKRT_DEVICES_MAX])</argsstring>
        <name>RouterCFS</name>
        <param>
          <type>const uint8_t</type>
          <declname>weights</declname>
          <array>[XKRT_DEVICES_MAX][XKRT_DEVICES_MAX]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" line="68" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classRouterCFS_1a8d95a903baecb7a088523192ddccef1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RouterCFS::~RouterCFS</definition>
        <argsstring>()</argsstring>
        <name>~RouterCFS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" line="69" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classRouterCFS_1a620ead664538d4a187c2a776043104c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>xkrt_device_global_id_t</type>
        <definition>xkrt_device_global_id_t RouterCFS::get_source</definition>
        <argsstring>(const xkrt_device_global_id_t dst, const xkrt_device_global_id_bitfield_t valid) const</argsstring>
        <name>get_source</name>
        <reimplements refid="classRouter_1a14d741803525216149e2cddb98dacde0">get_source</reimplements>
        <param>
          <type>const xkrt_device_global_id_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const xkrt_device_global_id_bitfield_t</type>
          <declname>valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the source to use for a data transfer to &apos;dst&apos; where the valid sources are amongst the &apos;valid&apos; bitfield </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" line="73" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" bodystart="73" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Idea is to use a dijkstra algorithm with weights being BW, but ignoring the link if there is already a pending transfer Problem is it may add significant latency The higher the rank, the lower the performance </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>RouterCFS</label>
        <link refid="classRouterCFS"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Router</label>
        <link refid="classRouter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>RouterCFS</label>
        <link refid="classRouterCFS"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>map</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>RouterCFS::xkrt_router_cfs_map_t</label>
        <link refid="structRouterCFS_1_1xkrt__router__cfs__map__t"/>
      </node>
      <node id="2">
        <label>Router</label>
        <link refid="classRouter"/>
      </node>
    </collaborationgraph>
    <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" line="32" column="1" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/routing/router-cfs.hpp" bodystart="33" bodyend="88"/>
    <listofallmembers>
      <member refid="classRouterCFS_1a620ead664538d4a187c2a776043104c3" prot="public" virt="virtual"><scope>RouterCFS</scope><name>get_source</name></member>
      <member refid="classRouterCFS_1a57afc95e36e05e9182d4c0dd995f2303" prot="public" virt="non-virtual"><scope>RouterCFS</scope><name>map</name></member>
      <member refid="classRouter_1a555428efbf07e22776889b8d9b88027f" prot="public" virt="non-virtual"><scope>RouterCFS</scope><name>Router</name></member>
      <member refid="classRouterCFS_1a162600eac29a5df74c2bfe91ec037116" prot="public" virt="non-virtual"><scope>RouterCFS</scope><name>RouterCFS</name></member>
      <member refid="classRouterCFS_1a5d144169db946e9affd74ca4fbf3a459" prot="public" virt="non-virtual"><scope>RouterCFS</scope><name>xkrt_router_cfs_map_t</name></member>
      <member refid="classRouter_1a85cb1b453f3ce1fe6abcefe84b5ca63d" prot="public" virt="virtual"><scope>RouterCFS</scope><name>~Router</name></member>
      <member refid="classRouterCFS_1a8d95a903baecb7a088523192ddccef1a" prot="public" virt="non-virtual"><scope>RouterCFS</scope><name>~RouterCFS</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
