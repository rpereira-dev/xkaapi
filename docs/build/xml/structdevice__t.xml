<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structdevice__t" kind="struct" language="C++" prot="public">
    <compoundname>device_t</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdevice__t_1a92ddd8c27cbac0c14e2418a948f1e48f" prot="public" static="no" mutable="no">
        <type><ref refid="structconf__device__t" kindref="compound">conf_device_t</ref> *</type>
        <definition>conf_device_t* device_t::conf</definition>
        <argsstring></argsstring>
        <name>conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="105" column="20" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a1bcefc0ada0cbe833f1c72df5535dc69" prot="public" static="no" mutable="no">
        <type>driver_type_t</type>
        <definition>driver_type_t device_t::driver_type</definition>
        <argsstring></argsstring>
        <name>driver_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="108" column="19" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1aab346a7945d7ed8d1a9ed314f95db768" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t device_t::driver_id</definition>
        <argsstring></argsstring>
        <name>driver_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="111" column="13" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a2bac7d6467b526aac3dc2a5d9b8fe488" prot="public" static="no" mutable="no">
        <type>device_global_id_t</type>
        <definition>device_global_id_t device_t::global_id</definition>
        <argsstring></argsstring>
        <name>global_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="114" column="24" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1aa4dccb2b75c8b2d9e96891c418ee7d42" prot="public" static="no" mutable="no">
        <type>std::atomic&lt; device_state_t &gt;</type>
        <definition>std::atomic&lt;device_state_t&gt; device_t::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="117" column="17" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a3b6c6d3ae51909854c29e14d70bd6e0a" prot="public" static="no" mutable="no">
        <type>device_global_id_bitfield_t *</type>
        <definition>device_global_id_bitfield_t* device_t::affinity</definition>
        <argsstring></argsstring>
        <name>affinity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="121" column="34" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a55dc82fda76a04f3e79af8809936a88f" prot="public" static="no" mutable="no">
        <type><ref refid="structdevice__memory__info__t" kindref="compound">device_memory_info_t</ref></type>
        <definition>device_memory_info_t device_t::memories[XKRT_DEVICE_MEMORIES_MAX]</definition>
        <argsstring>[XKRT_DEVICE_MEMORIES_MAX]</argsstring>
        <name>memories</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="144" column="26" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1af5d1bd4ff125b15824c5d2502844fd82" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int device_t::nmemories</definition>
        <argsstring></argsstring>
        <name>nmemories</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="145" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1ab0d7aee76cf3e0cbdc2de03f26b1e430" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int device_t::nstreams_per_thread</definition>
        <argsstring></argsstring>
        <name>nstreams_per_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="173" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a81d8e0126f89ca2d23c68f4345be7c2d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int device_t::count[STREAM_TYPE_ALL]</definition>
        <argsstring>[STREAM_TYPE_ALL]</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="176" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a0d4f3b0e54f8be235052e942f1fdc2de" prot="public" static="no" mutable="no">
        <type>std::atomic&lt; uint8_t &gt;</type>
        <definition>std::atomic&lt;uint8_t&gt; device_t::next_thread</definition>
        <argsstring></argsstring>
        <name>next_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="179" column="17" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a4332841c5f27690844d1289abd1c6989" prot="public" static="no" mutable="no">
        <type>std::atomic&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; device_t::next_stream[XKRT_MAX_THREADS_PER_DEVICE][STREAM_TYPE_ALL]</definition>
        <argsstring>[XKRT_MAX_THREADS_PER_DEVICE][STREAM_TYPE_ALL]</argsstring>
        <name>next_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="182" column="17" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a9eb9fc3920e356034fd0700060951401" prot="public" static="no" mutable="no">
        <type><ref refid="classstream__t" kindref="compound">stream_t</ref> **</type>
        <definition>stream_t** device_t::streams[XKRT_MAX_THREADS_PER_DEVICE][STREAM_TYPE_ALL]</definition>
        <argsstring>[XKRT_MAX_THREADS_PER_DEVICE][STREAM_TYPE_ALL]</argsstring>
        <name>streams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="185" column="15" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1aac8d0575655d55834e6e5880f06d64e2" prot="public" static="no" mutable="no">
        <type><ref refid="structthread__t" kindref="compound">thread_t</ref> *</type>
        <definition>thread_t* device_t::threads[XKRT_MAX_THREADS_PER_DEVICE]</definition>
        <argsstring>[XKRT_MAX_THREADS_PER_DEVICE]</argsstring>
        <name>threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="445" column="15" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a762f9d38594e24e60728eb7903c14ae9" prot="public" static="no" mutable="no">
        <type>std::atomic&lt; uint8_t &gt;</type>
        <definition>std::atomic&lt;uint8_t&gt; device_t::nthreads</definition>
        <argsstring></argsstring>
        <name>nthreads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="448" column="17" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevice__t_1a301f4e3349c8eb304e2cc0ddb381d13f" prot="public" static="no" mutable="no">
        <type>std::atomic&lt; uint8_t &gt;</type>
        <definition>std::atomic&lt;uint8_t&gt; device_t::thread_next</definition>
        <argsstring></argsstring>
        <name>thread_next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="451" column="17" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="451" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdevice__t_1a9e518e0d7371fd52d8b8d68acb642037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarea__chunk__t" kindref="compound">area_chunk_t</ref> *</type>
        <definition>area_chunk_t* device_t::memory_allocate_on</definition>
        <argsstring>(const size_t size, int area_idx)</argsstring>
        <name>memory_allocate_on</name>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>area_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="148" column="19"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a7a03930429547b1c934765d5d786bc43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarea__chunk__t" kindref="compound">area_chunk_t</ref> *</type>
        <definition>area_chunk_t* device_t::memory_allocate</definition>
        <argsstring>(const size_t size)</argsstring>
        <name>memory_allocate</name>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="151" column="19"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a014a4e2740792e8c046e1479eeddf8ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::memory_deallocate_on</definition>
        <argsstring>(area_chunk_t *chunk, int area_idx)</argsstring>
        <name>memory_deallocate_on</name>
        <param>
          <type><ref refid="structarea__chunk__t" kindref="compound">area_chunk_t</ref> *</type>
          <declname>chunk</declname>
        </param>
        <param>
          <type>int</type>
          <declname>area_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="154" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a9082241c74d96c41e0f185cfd5fe9edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::memory_deallocate</definition>
        <argsstring>(area_chunk_t *chunk)</argsstring>
        <name>memory_deallocate</name>
        <param>
          <type><ref refid="structarea__chunk__t" kindref="compound">area_chunk_t</ref> *</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="157" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1aae0c7c583cde9e714e9a48e9b73d2022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::memory_reset</definition>
        <argsstring>(void)</argsstring>
        <name>memory_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="160" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a3a66135a89d4028854712e58a8d85c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::memory_reset_on</definition>
        <argsstring>(int area_idx)</argsstring>
        <name>memory_reset_on</name>
        <param>
          <type>int</type>
          <declname>area_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="163" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a04804f2f68471a5f74d5cec47154fd20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::memory_set_chunk0</definition>
        <argsstring>(uintptr_t device_ptr, size_t size, int area_idx)</argsstring>
        <name>memory_set_chunk0</name>
        <param>
          <type>uintptr_t</type>
          <declname>device_ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>area_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="166" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a0cfd5cd09e5b4115d5f2ef940fc01689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::offloader_init</definition>
        <argsstring>(int(*f_stream_suggest)(int device_driver_id, stream_type_t type))</argsstring>
        <name>offloader_init</name>
        <param>
          <type>int(*)(int device_driver_id, stream_type_t type)</type>
          <declname>f_stream_suggest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="188" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a7cd5aed5bba3f77b3fcea712c1793bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::offloader_init_thread</definition>
        <argsstring>(uint8_t device_tid, stream_t *(*f_stream_create)(device_t *device, stream_type_t type, stream_instruction_counter_t capacity))</argsstring>
        <name>offloader_init_thread</name>
        <param>
          <type>uint8_t</type>
          <declname>device_tid</declname>
        </param>
        <param>
          <type><ref refid="classstream__t" kindref="compound">stream_t</ref> *(*)(<ref refid="structdevice__t" kindref="compound">device_t</ref> *device, stream_type_t type, stream_instruction_counter_t capacity)</type>
          <declname>f_stream_create</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="193" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a4567b29b707c6858e26a4c717d522ade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int device_t::offloader_launch</definition>
        <argsstring>(uint8_t device_tid)</argsstring>
        <name>offloader_launch</name>
        <param>
          <type>uint8_t</type>
          <declname>device_tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="199" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a7d38e2b0ec8cdf40fc20a075da90cca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int device_t::offloader_progress</definition>
        <argsstring>(uint8_t device_tid)</argsstring>
        <name>offloader_progress</name>
        <param>
          <type>uint8_t</type>
          <declname>device_tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="202" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1aee906597296425499374e8f30ba8067e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int device_t::offloader_wait_random_instruction</definition>
        <argsstring>(uint8_t device_tid)</argsstring>
        <name>offloader_wait_random_instruction</name>
        <param>
          <type>uint8_t</type>
          <declname>device_tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="205" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a420612312cac7aad076f89cbd13e2251" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::offloader_streams_are_empty</definition>
        <argsstring>(uint8_t device_id, const stream_type_t stype, bool *ready, bool *pending) const</argsstring>
        <name>offloader_streams_are_empty</name>
        <param>
          <type>uint8_t</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>const stream_type_t</type>
          <declname>stype</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ready</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="209" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1aac44088bbde92897d5db250a76de522e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::offloader_stream_next</definition>
        <argsstring>(const stream_type_t type, thread_t **pthread, stream_t **pstream)</argsstring>
        <name>offloader_stream_next</name>
        <param>
          <type>const stream_type_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structthread__t" kindref="compound">thread_t</ref> **</type>
          <declname>pthread</declname>
        </param>
        <param>
          <type><ref refid="classstream__t" kindref="compound">stream_t</ref> **</type>
          <declname>pstream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="212" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1aeb9131d8e105973390fab40fd6c39fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int device_t::offloader_stream_instructions_launch</definition>
        <argsstring>(uint8_t device_id, const stream_type_t stype)</argsstring>
        <name>offloader_stream_instructions_launch</name>
        <param>
          <type>uint8_t</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>const stream_type_t</type>
          <declname>stype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="219" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a0f64368be29e50fa87976ab582952f28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>blocking</declname>
            <defname>blocking</defname>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int device_t::offloader_stream_instructions_progress</definition>
        <argsstring>(uint8_t device_tid, const stream_type_t stype)</argsstring>
        <name>offloader_stream_instructions_progress</name>
        <param>
          <type>uint8_t</type>
          <declname>device_tid</declname>
        </param>
        <param>
          <type>const stream_type_t</type>
          <declname>stype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="225" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="225" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a2b9ad004044caf2ea6d56ed9f2713531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::offloader_stream_instruction_new</definition>
        <argsstring>(const stream_type_t stype, thread_t **pthread, stream_t **pstream, const stream_instruction_type_t itype, stream_instruction_t **pinstr, const callback_t &amp;callback)</argsstring>
        <name>offloader_stream_instruction_new</name>
        <param>
          <type>const stream_type_t</type>
          <declname>stype</declname>
        </param>
        <param>
          <type><ref refid="structthread__t" kindref="compound">thread_t</ref> **</type>
          <declname>pthread</declname>
        </param>
        <param>
          <type><ref refid="classstream__t" kindref="compound">stream_t</ref> **</type>
          <declname>pstream</declname>
        </param>
        <param>
          <type>const stream_instruction_type_t</type>
          <declname>itype</declname>
        </param>
        <param>
          <type><ref refid="structstream__instruction__t" kindref="compound">stream_instruction_t</ref> **</type>
          <declname>pinstr</declname>
        </param>
        <param>
          <type>const <ref refid="structcallback__t" kindref="compound">callback_t</ref> &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="262" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a1f61711a42ea1a7ec9c2368c2aff4c77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::offloader_stream_instruction_commit</definition>
        <argsstring>(thread_t *thread, stream_t *stream, stream_instruction_t *instr)</argsstring>
        <name>offloader_stream_instruction_commit</name>
        <param>
          <type><ref refid="structthread__t" kindref="compound">thread_t</ref> *</type>
          <declname>thread</declname>
        </param>
        <param>
          <type><ref refid="classstream__t" kindref="compound">stream_t</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structstream__instruction__t" kindref="compound">stream_instruction_t</ref> *</type>
          <declname>instr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="273" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a73e9ff6b537e6eb85adb0d13b1909ee4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>stream_instruction_type_t</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void device_t::offloader_stream_instruction_submit_file</definition>
        <argsstring>(int fd, void *buffer, size_t n, size_t offset, const callback_t &amp;callback)</argsstring>
        <name>offloader_stream_instruction_submit_file</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const <ref refid="structcallback__t" kindref="compound">callback_t</ref> &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="281" column="10" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="281" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a8e105837cd1b2bd846913ff735127de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void device_t::offloader_stream_instruction_submit_kernel</definition>
        <argsstring>(kernel_launcher_t launcher, void *vargs, const callback_t &amp;callback)</argsstring>
        <name>offloader_stream_instruction_submit_kernel</name>
        <param>
          <type>kernel_launcher_t</type>
          <declname>launcher</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>vargs</declname>
        </param>
        <param>
          <type>const <ref refid="structcallback__t" kindref="compound">callback_t</ref> &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="317" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structdevice__t_1a4fcb7b7a7a4f37e04f23e07db0bb1b4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename HOST_VIEW_T</type>
          </param>
          <param>
            <type>typename DEVICE_VIEW_T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classstream__t" kindref="compound">stream_t</ref> *</type>
        <definition>stream_t* device_t::offloader_stream_instruction_submit_copy</definition>
        <argsstring>(const HOST_VIEW_T &amp;host_view, const device_global_id_t dst_device_global_id, const DEVICE_VIEW_T &amp;dst_device_view, const device_global_id_t src_device_global_id, const DEVICE_VIEW_T &amp;src_device_view, const callback_t &amp;callback)</argsstring>
        <name>offloader_stream_instruction_submit_copy</name>
        <param>
          <type>const HOST_VIEW_T &amp;</type>
          <declname>host_view</declname>
        </param>
        <param>
          <type>const device_global_id_t</type>
          <declname>dst_device_global_id</declname>
        </param>
        <param>
          <type>const DEVICE_VIEW_T &amp;</type>
          <declname>dst_device_view</declname>
        </param>
        <param>
          <type>const device_global_id_t</type>
          <declname>src_device_global_id</declname>
        </param>
        <param>
          <type>const DEVICE_VIEW_T &amp;</type>
          <declname>src_device_view</declname>
        </param>
        <param>
          <type>const <ref refid="structcallback__t" kindref="compound">callback_t</ref> &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="326" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="326" bodyend="438"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>team_t</label>
        <link refid="structteam__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>threads</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>desc</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Lockable</label>
        <link refid="classLockable"/>
      </node>
      <node id="11">
        <label>stream_instruction_t</label>
        <link refid="structstream__instruction__t"/>
        <childnode refid="12" relation="usage">
          <edgelabel>file</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>copy_2D</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>callback</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>copy_1D</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>kern</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>conf_stream_t</label>
        <link refid="structconf__stream__t"/>
      </node>
      <node id="2">
        <label>thread_t</label>
        <link refid="structthread__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>prev</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>team</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>deque</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>current_task</edgelabel>
          <edgelabel>implicit_task</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>stream_instruction_copy_1D_t</label>
        <link refid="structstream__instruction__copy__1D__t"/>
      </node>
      <node id="15">
        <label>callback_t</label>
        <link refid="structcallback__t"/>
      </node>
      <node id="12">
        <label>stream_instruction_file_t</label>
        <link refid="structstream__instruction__file__t"/>
      </node>
      <node id="10">
        <label>stream_instruction_queue_t</label>
        <link refid="classstream__instruction__queue__t"/>
        <childnode refid="11" relation="usage">
          <edgelabel>instr</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>area_t</label>
        <link refid="structarea__t"/>
        <childnode refid="20" relation="usage">
          <edgelabel>chunk0</edgelabel>
          <edgelabel>free_chunk_list</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>deque_t&lt; task_t *, 4096 &gt;</label>
        <link refid="structdeque__t"/>
      </node>
      <node id="13">
        <label>stream_instruction_copy_2D_t</label>
        <link refid="structstream__instruction__copy__2D__t"/>
        <childnode refid="14" relation="usage">
          <edgelabel>dst_device_view</edgelabel>
          <edgelabel>src_device_view</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>team_binding_t</label>
        <link refid="structteam__binding__t"/>
      </node>
      <node id="18">
        <label>device_memory_info_t</label>
        <link refid="structdevice__memory__info__t"/>
        <childnode refid="19" relation="usage">
          <edgelabel>area</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>stream_instruction_kernel_t</label>
        <link refid="structstream__instruction__kernel__t"/>
      </node>
      <node id="14">
        <label>memory_replica_view_t</label>
        <link refid="structmemory__replica__view__t"/>
      </node>
      <node id="22">
        <label>conf_device_t</label>
        <link refid="structconf__device__t"/>
        <childnode refid="23" relation="usage">
          <edgelabel>offloader</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>stream_t</label>
        <link refid="classstream__t"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>pending</edgelabel>
          <edgelabel>ready</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>mutex_t</label>
        <link refid="structmutex__t"/>
      </node>
      <node id="7">
        <label>task_t</label>
        <link refid="structtask__t"/>
        <childnode refid="7" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>device_t</label>
        <link refid="structdevice__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>threads</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>streams</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>memories</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>conf</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>conf_offloader_t</label>
        <link refid="structconf__offloader__t"/>
        <childnode refid="24" relation="usage">
          <edgelabel>streams</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>team_desc_t</label>
        <link refid="structteam__desc__t"/>
        <childnode refid="5" relation="usage">
          <edgelabel>binding</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>area_chunk_t</label>
        <link refid="structarea__chunk__t"/>
        <childnode refid="20" relation="usage">
          <edgelabel>freelink</edgelabel>
          <edgelabel>next</edgelabel>
          <edgelabel>prev</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" line="98" column="1" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp" bodystart="99" bodyend="453"/>
    <listofallmembers>
      <member refid="structdevice__t_1a3b6c6d3ae51909854c29e14d70bd6e0a" prot="public" virt="non-virtual"><scope>device_t</scope><name>affinity</name></member>
      <member refid="structdevice__t_1a92ddd8c27cbac0c14e2418a948f1e48f" prot="public" virt="non-virtual"><scope>device_t</scope><name>conf</name></member>
      <member refid="structdevice__t_1a81d8e0126f89ca2d23c68f4345be7c2d" prot="public" virt="non-virtual"><scope>device_t</scope><name>count</name></member>
      <member refid="structdevice__t_1aab346a7945d7ed8d1a9ed314f95db768" prot="public" virt="non-virtual"><scope>device_t</scope><name>driver_id</name></member>
      <member refid="structdevice__t_1a1bcefc0ada0cbe833f1c72df5535dc69" prot="public" virt="non-virtual"><scope>device_t</scope><name>driver_type</name></member>
      <member refid="structdevice__t_1a2bac7d6467b526aac3dc2a5d9b8fe488" prot="public" virt="non-virtual"><scope>device_t</scope><name>global_id</name></member>
      <member refid="structdevice__t_1a55dc82fda76a04f3e79af8809936a88f" prot="public" virt="non-virtual"><scope>device_t</scope><name>memories</name></member>
      <member refid="structdevice__t_1a7a03930429547b1c934765d5d786bc43" prot="public" virt="non-virtual"><scope>device_t</scope><name>memory_allocate</name></member>
      <member refid="structdevice__t_1a9e518e0d7371fd52d8b8d68acb642037" prot="public" virt="non-virtual"><scope>device_t</scope><name>memory_allocate_on</name></member>
      <member refid="structdevice__t_1a9082241c74d96c41e0f185cfd5fe9edc" prot="public" virt="non-virtual"><scope>device_t</scope><name>memory_deallocate</name></member>
      <member refid="structdevice__t_1a014a4e2740792e8c046e1479eeddf8ee" prot="public" virt="non-virtual"><scope>device_t</scope><name>memory_deallocate_on</name></member>
      <member refid="structdevice__t_1aae0c7c583cde9e714e9a48e9b73d2022" prot="public" virt="non-virtual"><scope>device_t</scope><name>memory_reset</name></member>
      <member refid="structdevice__t_1a3a66135a89d4028854712e58a8d85c57" prot="public" virt="non-virtual"><scope>device_t</scope><name>memory_reset_on</name></member>
      <member refid="structdevice__t_1a04804f2f68471a5f74d5cec47154fd20" prot="public" virt="non-virtual"><scope>device_t</scope><name>memory_set_chunk0</name></member>
      <member refid="structdevice__t_1a4332841c5f27690844d1289abd1c6989" prot="public" virt="non-virtual"><scope>device_t</scope><name>next_stream</name></member>
      <member refid="structdevice__t_1a0d4f3b0e54f8be235052e942f1fdc2de" prot="public" virt="non-virtual"><scope>device_t</scope><name>next_thread</name></member>
      <member refid="structdevice__t_1af5d1bd4ff125b15824c5d2502844fd82" prot="public" virt="non-virtual"><scope>device_t</scope><name>nmemories</name></member>
      <member refid="structdevice__t_1ab0d7aee76cf3e0cbdc2de03f26b1e430" prot="public" virt="non-virtual"><scope>device_t</scope><name>nstreams_per_thread</name></member>
      <member refid="structdevice__t_1a762f9d38594e24e60728eb7903c14ae9" prot="public" virt="non-virtual"><scope>device_t</scope><name>nthreads</name></member>
      <member refid="structdevice__t_1a0cfd5cd09e5b4115d5f2ef940fc01689" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_init</name></member>
      <member refid="structdevice__t_1a7cd5aed5bba3f77b3fcea712c1793bbf" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_init_thread</name></member>
      <member refid="structdevice__t_1a4567b29b707c6858e26a4c717d522ade" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_launch</name></member>
      <member refid="structdevice__t_1a7d38e2b0ec8cdf40fc20a075da90cca8" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_progress</name></member>
      <member refid="structdevice__t_1a1f61711a42ea1a7ec9c2368c2aff4c77" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_stream_instruction_commit</name></member>
      <member refid="structdevice__t_1a2b9ad004044caf2ea6d56ed9f2713531" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_stream_instruction_new</name></member>
      <member refid="structdevice__t_1a4fcb7b7a7a4f37e04f23e07db0bb1b4e" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_stream_instruction_submit_copy</name></member>
      <member refid="structdevice__t_1a73e9ff6b537e6eb85adb0d13b1909ee4" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_stream_instruction_submit_file</name></member>
      <member refid="structdevice__t_1a8e105837cd1b2bd846913ff735127de9" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_stream_instruction_submit_kernel</name></member>
      <member refid="structdevice__t_1aeb9131d8e105973390fab40fd6c39fa6" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_stream_instructions_launch</name></member>
      <member refid="structdevice__t_1a0f64368be29e50fa87976ab582952f28" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_stream_instructions_progress</name></member>
      <member refid="structdevice__t_1aac44088bbde92897d5db250a76de522e" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_stream_next</name></member>
      <member refid="structdevice__t_1a420612312cac7aad076f89cbd13e2251" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_streams_are_empty</name></member>
      <member refid="structdevice__t_1aee906597296425499374e8f30ba8067e" prot="public" virt="non-virtual"><scope>device_t</scope><name>offloader_wait_random_instruction</name></member>
      <member refid="structdevice__t_1aa4dccb2b75c8b2d9e96891c418ee7d42" prot="public" virt="non-virtual"><scope>device_t</scope><name>state</name></member>
      <member refid="structdevice__t_1a9eb9fc3920e356034fd0700060951401" prot="public" virt="non-virtual"><scope>device_t</scope><name>streams</name></member>
      <member refid="structdevice__t_1a301f4e3349c8eb304e2cc0ddb381d13f" prot="public" virt="non-virtual"><scope>device_t</scope><name>thread_next</name></member>
      <member refid="structdevice__t_1aac8d0575655d55834e6e5880f06d64e2" prot="public" virt="non-virtual"><scope>device_t</scope><name>threads</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
