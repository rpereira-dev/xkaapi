<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="task-format_8h" kind="file" language="C++">
    <compoundname>task-format.h</compoundname>
    <includes local="no">atomic</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="namespace_8h" local="no">xkrt/namespace.h</includes>
    <includedby refid="task_8hpp" local="no">/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>atomic</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>xkrt/namespace.h</label>
        <link refid="namespace_8h_source"/>
      </node>
      <node id="1">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h</label>
        <link refid="task-format_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/stream.h</label>
        <link refid="stream_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/device.hpp</label>
        <link refid="device_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/driver-host.h</label>
        <link refid="driver-host_8h_source"/>
      </node>
      <node id="4">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/driver-sycl.h</label>
        <link refid="driver-sycl_8h_source"/>
      </node>
      <node id="19">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/point/dependency-map.hpp</label>
        <link refid="dependency-map_8hpp_source"/>
      </node>
      <node id="10">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp</label>
        <link refid="memory-tree_8hpp_source"/>
      </node>
      <node id="8">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/driver-cu.h</label>
        <link refid="driver-cu_8h_source"/>
      </node>
      <node id="6">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/driver-ze-blas.h</label>
        <link refid="driver-ze-blas_8h_source"/>
      </node>
      <node id="11">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/runtime.h</label>
        <link refid="runtime_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/thread/thread.h</label>
        <link refid="thread_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/driver-cl.h</label>
        <link refid="driver-cl_8h_source"/>
      </node>
      <node id="20">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/register.h</label>
        <link refid="register_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/interval/dependency-tree.hpp</label>
        <link refid="interval_2dependency-tree_8hpp_source"/>
      </node>
      <node id="5">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/driver-ze.h</label>
        <link refid="driver-ze_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/conf/conf.h</label>
        <link refid="conf_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task.hpp</label>
        <link refid="task_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/dependency-tree.hpp</label>
        <link refid="blas_2dependency-tree_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h</label>
        <link refid="task-format_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/driver.h</label>
        <link refid="driver_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/driver/driver-hip.h</label>
        <link refid="driver-hip_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtask__format__t" prot="public">task_format_t</innerclass>
    <innerclass refid="structtask__formats__t" prot="public">task_formats_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="task-format_8h_1ac5a2f31a88115bd167c864ec49af5f1d" prot="public" static="no">
        <name>TASK_FORMAT_MAX</name>
        <initializer>((1 &lt;&lt; (sizeof(task_format_id_t) * 8)) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="74" column="10" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="task-format_8h_1a6d296c82f2f3a7d68de2831948471506" prot="public" static="no">
        <name>TASK_FORMAT_NULL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="75" column="10" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="task-format_8h_1a9d7334845e76dc43dae7088b86ad3392" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>task_format_target_t</name>
        <enumvalue id="task-format_8h_1a9d7334845e76dc43dae7088b86ad3392ad9456137651a05f409610f8bcb56fc2e" prot="public">
          <name>TASK_FORMAT_TARGET_HOST</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="task-format_8h_1a9d7334845e76dc43dae7088b86ad3392acc2df5bcf7acfee5f764110bff05594f" prot="public">
          <name>TASK_FORMAT_TARGET_CUDA</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="task-format_8h_1a9d7334845e76dc43dae7088b86ad3392a9f7b783d63809d6899ef729f3a5f1b8f" prot="public">
          <name>TASK_FORMAT_TARGET_ZE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="task-format_8h_1a9d7334845e76dc43dae7088b86ad3392a33c106c2956d47d4373c3f3dee119e9a" prot="public">
          <name>TASK_FORMAT_TARGET_CL</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="task-format_8h_1a9d7334845e76dc43dae7088b86ad3392a10321c0552868cce514729ab875bd11c" prot="public">
          <name>TASK_FORMAT_TARGET_HIP</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="task-format_8h_1a9d7334845e76dc43dae7088b86ad3392aa6c64feeefde2cd07b24957bf736e600" prot="public">
          <name>TASK_FORMAT_TARGET_SYCL</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="task-format_8h_1a9d7334845e76dc43dae7088b86ad3392a670fec0947a8fd04ffb4fcd9dee879cc" prot="public">
          <name>TASK_FORMAT_TARGET_MAX</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="47" column="1" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" bodystart="48" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="task-format_8h_1ac30a5ad62fcbd115c6ec70d5c51b4829" prot="public" static="no">
        <type>XKRT_NAMESPACE_BEGIN enum task_format_target_t</type>
        <definition>typedef XKRT_NAMESPACE_BEGIN enum task_format_target_t task_format_target_t</definition>
        <argsstring></argsstring>
        <name>task_format_target_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="57" column="36"/>
      </memberdef>
      <memberdef kind="typedef" id="task-format_8h_1aa34239b175b8f413f8db897cc920047b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* task_format_func_t) ()</definition>
        <argsstring>)()</argsstring>
        <name>task_format_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="59" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="task-format_8h_1a44cc21e70b2169a10e5e374649224f12" prot="public" static="no">
        <type>struct <ref refid="structtask__format__t" kindref="compound">task_format_t</ref></type>
        <definition>typedef struct task_format_t task_format_t</definition>
        <argsstring></argsstring>
        <name>task_format_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="69" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="task-format_8h_1af6133f860d2e7f882168d8aea96767ea" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t task_format_id_t</definition>
        <argsstring></argsstring>
        <name>task_format_id_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="72" column="17" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="task-format_8h_1a191cf157e0952a9305111d0d7d1bc810" prot="public" static="no">
        <type>struct <ref refid="structtask__formats__t" kindref="compound">task_formats_t</ref></type>
        <definition>typedef struct task_formats_t task_formats_t</definition>
        <argsstring></argsstring>
        <name>task_formats_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="81" column="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="task-format_8h_1ad430c3a5e7eef95351c998b17c27ec1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void task_formats_init</definition>
        <argsstring>(task_formats_t *formats)</argsstring>
        <name>task_formats_init</name>
        <param>
          <type><ref refid="structtask__formats__t" kindref="compound">task_formats_t</ref> *</type>
          <declname>formats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="83" column="6" declfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="task-format_8h_1a6fb6626fee86f6db450c0826598cd45d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>task_format_id_t</type>
        <definition>task_format_id_t task_format_create</definition>
        <argsstring>(task_formats_t *formats, task_format_t *format)</argsstring>
        <name>task_format_create</name>
        <param>
          <type><ref refid="structtask__formats__t" kindref="compound">task_formats_t</ref> *</type>
          <declname>formats</declname>
        </param>
        <param>
          <type><ref refid="structtask__format__t" kindref="compound">task_format_t</ref> *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="84" column="18" declfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" declline="84" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="task-format_8h_1ae74fec3c54c552cda699d9211bc4a642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtask__format__t" kindref="compound">task_format_t</ref> *</type>
        <definition>task_format_t* task_format_get</definition>
        <argsstring>(task_formats_t *formats, task_format_id_t id)</argsstring>
        <name>task_format_get</name>
        <param>
          <type><ref refid="structtask__formats__t" kindref="compound">task_formats_t</ref> *</type>
          <declname>formats</declname>
        </param>
        <param>
          <type>task_format_id_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" line="85" column="16" declfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h" declline="85" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>2024,2025<sp/>INRIA</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>Contributors<sp/>:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Thierry<sp/>Gautier,<sp/>thierry.gautier@inrialpes.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>Romain<sp/>PEREIRA,<sp/>romain.pereira@inria.fr<sp/>+<sp/>rpereira@anl.gov</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/>This<sp/>software<sp/>is<sp/>a<sp/>computer<sp/>program<sp/>whose<sp/>purpose<sp/>is<sp/>to<sp/>execute</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>blas<sp/>subroutines<sp/>on<sp/>multi-GPUs<sp/>system.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>CeCILL-C<sp/>license<sp/>under<sp/>French<sp/>law<sp/>and</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>abiding<sp/>by<sp/>the<sp/>rules<sp/>of<sp/>distribution<sp/>of<sp/>free<sp/>software.<sp/><sp/>You<sp/>can<sp/><sp/>use,</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/>modify<sp/>and/<sp/>or<sp/>redistribute<sp/>the<sp/>software<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>CeCILL-C</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>license<sp/>as<sp/>circulated<sp/>by<sp/>CEA,<sp/>CNRS<sp/>and<sp/>INRIA<sp/>at<sp/>the<sp/>following<sp/>URL</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>&quot;http://www.cecill.info&quot;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">**<sp/>As<sp/>a<sp/>counterpart<sp/>to<sp/>the<sp/>access<sp/>to<sp/>the<sp/>source<sp/>code<sp/>and<sp/><sp/>rights<sp/>to<sp/>copy,</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/>modify<sp/>and<sp/>redistribute<sp/>granted<sp/>by<sp/>the<sp/>license,<sp/>users<sp/>are<sp/>provided<sp/>only</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**<sp/>with<sp/>a<sp/>limited<sp/>warranty<sp/><sp/>and<sp/>the<sp/>software&apos;s<sp/>author,<sp/><sp/>the<sp/>holder<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/>economic<sp/>rights,<sp/><sp/>and<sp/>the<sp/>successive<sp/>licensors<sp/><sp/>have<sp/>only<sp/><sp/>limited</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**<sp/>liability.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/>In<sp/>this<sp/>respect,<sp/>the<sp/>user&apos;s<sp/>attention<sp/>is<sp/>drawn<sp/>to<sp/>the<sp/>risks<sp/>associated</highlight></codeline>
<codeline lineno="24"><highlight class="comment">**<sp/>with<sp/>loading,<sp/><sp/>using,<sp/><sp/>modifying<sp/>and/or<sp/>developing<sp/>or<sp/>reproducing<sp/>the</highlight></codeline>
<codeline lineno="25"><highlight class="comment">**<sp/>software<sp/>by<sp/>the<sp/>user<sp/>in<sp/>light<sp/>of<sp/>its<sp/>specific<sp/>status<sp/>of<sp/>free<sp/>software,</highlight></codeline>
<codeline lineno="26"><highlight class="comment">**<sp/>that<sp/>may<sp/>mean<sp/><sp/>that<sp/>it<sp/>is<sp/>complicated<sp/>to<sp/>manipulate,<sp/><sp/>and<sp/><sp/>that<sp/><sp/>also</highlight></codeline>
<codeline lineno="27"><highlight class="comment">**<sp/>therefore<sp/>means<sp/><sp/>that<sp/>it<sp/>is<sp/>reserved<sp/>for<sp/>developers<sp/><sp/>and<sp/><sp/>experienced</highlight></codeline>
<codeline lineno="28"><highlight class="comment">**<sp/>professionals<sp/>having<sp/>in-depth<sp/>computer<sp/>knowledge.<sp/>Users<sp/>are<sp/>therefore</highlight></codeline>
<codeline lineno="29"><highlight class="comment">**<sp/>encouraged<sp/>to<sp/>load<sp/>and<sp/>test<sp/>the<sp/>software&apos;s<sp/>suitability<sp/>as<sp/>regards<sp/>their</highlight></codeline>
<codeline lineno="30"><highlight class="comment">**<sp/>requirements<sp/>in<sp/>conditions<sp/>enabling<sp/>the<sp/>security<sp/>of<sp/>their<sp/>systems<sp/>and/or</highlight></codeline>
<codeline lineno="31"><highlight class="comment">**<sp/>data<sp/>to<sp/>be<sp/>ensured<sp/>and,<sp/><sp/>more<sp/>generally,<sp/>to<sp/>use<sp/>and<sp/>operate<sp/>it<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="32"><highlight class="comment">**<sp/>same<sp/>conditions<sp/>as<sp/>regards<sp/>security.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">**<sp/>The<sp/>fact<sp/>that<sp/>you<sp/>are<sp/>presently<sp/>reading<sp/>this<sp/>means<sp/>that<sp/>you<sp/>have<sp/>had</highlight></codeline>
<codeline lineno="35"><highlight class="comment">**<sp/>knowledge<sp/>of<sp/>the<sp/>CeCILL-C<sp/>license<sp/>and<sp/>that<sp/>you<sp/>accept<sp/>its<sp/>terms.</highlight></codeline>
<codeline lineno="36"><highlight class="comment">**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__TASK_FORMAT_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>__TASK_FORMAT_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;xkrt/namespace.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">XKRT_NAMESPACE_BEGIN</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>task_format_target_t<sp/>:<sp/>uint8_t</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_FORMAT_TARGET_HOST<sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_FORMAT_TARGET_CUDA<sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_FORMAT_TARGET_ZE<sp/><sp/><sp/><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_FORMAT_TARGET_CL<sp/><sp/><sp/><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_FORMAT_TARGET_HIP<sp/><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_FORMAT_TARGET_SYCL<sp/><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_FORMAT_TARGET_MAX<sp/><sp/><sp/>=<sp/>6</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_format_target_t;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*task_format_func_t)();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structtask__format__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structtask__format__t" kindref="compound">task_format_t</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>task<sp/>launch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>task_format_func_t<sp/>f[TASK_FORMAT_TARGET_MAX];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>label<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>label[32];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}<sp/><ref refid="structtask__format__t" kindref="compound">task_format_t</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>maximum<sp/>number<sp/>of<sp/>task<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>task_format_id_t;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>TASK_FORMAT_MAX<sp/>((1<sp/>&lt;&lt;<sp/>(sizeof(task_format_id_t)<sp/>*<sp/>8))<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>TASK_FORMAT_NULL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structtask__formats__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structtask__formats__t" kindref="compound">task_formats_t</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtask__format__t" kindref="compound">task_format_t</ref><sp/>list[TASK_FORMAT_MAX];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;task_format_id_t&gt;<sp/>next_fmtid;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtask__formats__t" kindref="compound">task_formats_t</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>task_formats_init(<ref refid="structtask__formats__t" kindref="compound">task_formats_t</ref><sp/>*<sp/>formats);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">task_format_id_t<sp/>task_format_create(<ref refid="structtask__formats__t" kindref="compound">task_formats_t</ref><sp/>*<sp/>formats,<sp/><ref refid="structtask__format__t" kindref="compound">task_format_t</ref><sp/>*<sp/>format);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="structtask__format__t" kindref="compound">task_format_t</ref><sp/>*<sp/>task_format_get(<ref refid="structtask__formats__t" kindref="compound">task_formats_t</ref><sp/>*<sp/>formats,<sp/>task_format_id_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">XKRT_NAMESPACE_END</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__TASK_TARGET_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/task/task-format.h"/>
  </compounddef>
</doxygen>
