<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classKBLASMemoryTreeNode" kind="class" language="C++" prot="public">
    <compoundname>KBLASMemoryTreeNode</compoundname>
    <basecompoundref prot="public" virt="non-virtual">KHPTree&lt; K, KBLASMemoryTreeNodeSearch&lt; K &gt; &gt;::Node</basecompoundref>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>K</declname>
        <defname>K</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classKBLASMemoryTreeNode_1ad2ad75456839c7583f773c33f560857a" prot="private" static="no">
        <type>typename <ref refid="classKHPTree" kindref="compound">KHPTree</ref>&lt; K, <ref refid="classKBLASMemoryTreeNodeSearch" kindref="compound">KBLASMemoryTreeNodeSearch</ref>&lt; K &gt; &gt;::<ref refid="classKBLASMemoryTreeNode" kindref="compound">Node</ref></type>
        <definition>using KBLASMemoryTreeNode&lt; K &gt;::Base =  typename KHPTree&lt;K, KBLASMemoryTreeNodeSearch&lt;K&gt; &gt;::Node</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="590" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classKBLASMemoryTreeNode_1aa248f97ec9616e4b4a1a5fa6e32f3071" prot="private" static="no">
        <type><ref refid="classKHyperrect" kindref="compound">KHyperrect</ref>&lt; K &gt;</type>
        <definition>using KBLASMemoryTreeNode&lt; K &gt;::Hyperrect =  KHyperrect&lt;K&gt;</definition>
        <argsstring></argsstring>
        <name>Hyperrect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="591" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classKBLASMemoryTreeNode_1a9af48af6b02237c3b647e7a3eda83306" prot="private" static="no">
        <type><ref refid="classKMemoryBlock" kindref="compound">KMemoryBlock</ref>&lt; K &gt;</type>
        <definition>using KBLASMemoryTreeNode&lt; K &gt;::MemoryBlock =  KMemoryBlock&lt;K&gt;</definition>
        <argsstring></argsstring>
        <name>MemoryBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="592" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classKBLASMemoryTreeNode_1a80876e7c9cddfbc623769be0a19c8287" prot="private" static="no">
        <type><ref refid="classKMemoryReplicate" kindref="compound">KMemoryReplicate</ref>&lt; K &gt;</type>
        <definition>using KBLASMemoryTreeNode&lt; K &gt;::MemoryReplicate =  KMemoryReplicate&lt;K&gt;</definition>
        <argsstring></argsstring>
        <name>MemoryReplicate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="593" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classKBLASMemoryTreeNode_1ad6659dafdf51161c5bad9d809d365b22" prot="private" static="no">
        <type><ref refid="classKMemoryReplicateAllocationView" kindref="compound">KMemoryReplicateAllocationView</ref>&lt; K &gt;</type>
        <definition>using KBLASMemoryTreeNode&lt; K &gt;::MemoryReplicateAllocationView =  KMemoryReplicateAllocationView&lt;K&gt;</definition>
        <argsstring></argsstring>
        <name>MemoryReplicateAllocationView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="594" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classKBLASMemoryTreeNode_1ac3bf425bd44de888242ce62059c30372" prot="private" static="no">
        <type><ref refid="classKBLASMemoryTreeNode" kindref="compound">KBLASMemoryTreeNode</ref>&lt; K &gt;</type>
        <definition>using KBLASMemoryTreeNode&lt; K &gt;::Node =  KBLASMemoryTreeNode&lt;K&gt;</definition>
        <argsstring></argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="595" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classKBLASMemoryTreeNode_1a322f6127e52da8ee59741c10dd123821" prot="private" static="no">
        <type>typename <ref refid="classKBLASMemoryTreeNodeSearch" kindref="compound">KBLASMemoryTreeNodeSearch</ref>&lt; K &gt;::Partite</type>
        <definition>using KBLASMemoryTreeNode&lt; K &gt;::Partite =  typename KBLASMemoryTreeNodeSearch&lt;K&gt;::Partite</definition>
        <argsstring></argsstring>
        <name>Partite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="596" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classKBLASMemoryTreeNode_1a99767b5a521ea422319acc0a61bd48d6" prot="private" static="no">
        <type><ref refid="classKBLASMemoryTreeNodeSearch" kindref="compound">KBLASMemoryTreeNodeSearch</ref>&lt; K &gt;</type>
        <definition>using KBLASMemoryTreeNode&lt; K &gt;::Search =  KBLASMemoryTreeNodeSearch&lt;K&gt;</definition>
        <argsstring></argsstring>
        <name>Search</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="597" column="5" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="597" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classKBLASMemoryTreeNode_1a391049fea7069522e020a2d938b81fd3" prot="public" static="no" mutable="no">
        <type><ref refid="classKMemoryBlock" kindref="compound">MemoryBlock</ref></type>
        <definition>MemoryBlock KBLASMemoryTreeNode&lt; K &gt;::block</definition>
        <argsstring></argsstring>
        <name>block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="602" column="21" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="602" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKBLASMemoryTreeNode_1a8c72bb0566e42cc141fb3cec082cd5db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KBLASMemoryTreeNode&lt; K &gt;::KBLASMemoryTreeNode</definition>
        <argsstring>(const access_t *access, const Hyperrect &amp;r, const int k, const Color color)</argsstring>
        <name>KBLASMemoryTreeNode</name>
        <param>
          <type>const <ref refid="classaccess__t" kindref="compound">access_t</ref> *</type>
          <declname>access</declname>
        </param>
        <param>
          <type>const <ref refid="classKHyperrect" kindref="compound">Hyperrect</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const Color</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="602" column="21" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="607" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classKBLASMemoryTreeNode_1a3261e3cb0619498d1af56f66560c992c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KBLASMemoryTreeNode&lt; K &gt;::KBLASMemoryTreeNode</definition>
        <argsstring>(const Hyperrect &amp;r, const int k, const Color color, const Node *src, const size_t sizeof_type)</argsstring>
        <name>KBLASMemoryTreeNode</name>
        <param>
          <type>const <ref refid="classKHyperrect" kindref="compound">Hyperrect</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const Color</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classKBLASMemoryTreeNode" kindref="compound">Node</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>sizeof_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A new node is being created from a split, make it inherit its original node &apos;src&apos;<itemizedlist>
<listitem><para>access - the access</para>
</listitem><listitem><para>r - the shrinked rect that this is inheriting from</para>
</listitem><listitem><para>k - the dimension that got splitted</para>
</listitem><listitem><para>color - the node color</para>
</listitem><listitem><para>src - the node that got split</para>
</listitem></itemizedlist>
</para>
<para>We have: U (src-&gt;hyperrect, r) == the node rect before being shrinked n (src-&gt;hyperrect, r) = {} - empty intersection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="602" column="21" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="631" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="classKBLASMemoryTreeNode_1a0cdb8a47c4831e7a85bc125a2ba46d9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KBLASMemoryTreeNode&lt; K &gt;::dump_str</definition>
        <argsstring>(FILE *f) const</argsstring>
        <name>dump_str</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="645" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="645" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="classKBLASMemoryTreeNode_1a9e0f5e101d8a3843edfde4ed6f3135ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KBLASMemoryTreeNode&lt; K &gt;::dump_hyperrect_str</definition>
        <argsstring>(FILE *f) const</argsstring>
        <name>dump_hyperrect_str</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="651" column="9" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="651" bodyend="663"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KHPTree&lt; K, KBLASMemoryTreeNodeSearch&lt; K &gt; &gt;::Node</label>
      </node>
      <node id="1">
        <label>KBLASMemoryTreeNode&lt; K &gt;</label>
        <link refid="classKBLASMemoryTreeNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KHPTree&lt; K, KBLASMemoryTreeNodeSearch&lt; K &gt; &gt;::Node</label>
      </node>
      <node id="1">
        <label>KBLASMemoryTreeNode&lt; K &gt;</label>
        <link refid="classKBLASMemoryTreeNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" line="588" column="1" bodyfile="/home/rpereira/repo/xktrucs/xkaapi/include/xkrt/memory/access/blas/memory-tree.hpp" bodystart="588" bodyend="665"/>
    <listofallmembers>
      <member refid="classKBLASMemoryTreeNode_1ad2ad75456839c7583f773c33f560857a" prot="private" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>Base</name></member>
      <member refid="classKBLASMemoryTreeNode_1a391049fea7069522e020a2d938b81fd3" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>block</name></member>
      <member refid="classKHPTree_1_1Node_1a4fcd92651ffa1b047e7aa85088f2fac5" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>colors</name></member>
      <member refid="classKHPTree_1_1Node_1ac135f65472b40a329d8f696211649fec" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>dump</name></member>
      <member refid="classKHPTree_1_1Node_1aac26d277780759a35f3f9fafa0ef940d" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>dump_hyperrect</name></member>
      <member refid="classKBLASMemoryTreeNode_1a9e0f5e101d8a3843edfde4ed6f3135ee" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>dump_hyperrect_str</name></member>
      <member refid="classKBLASMemoryTreeNode_1a0cdb8a47c4831e7a85bc125a2ba46d9d" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>dump_str</name></member>
      <member refid="classKHPTree_1_1Node_1a94b7cfc4e13848a01f68402ac58ce1b4" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>get_child</name></member>
      <member refid="classKHPTree_1_1Node_1af0c74122b67117c06934687855546b9b" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>height</name></member>
      <member refid="classKHPTree_1_1Node_1a470cb46e2b291a37c1b2f7f1f45c3ee6" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>height</name></member>
      <member refid="classKHPTree_1_1Node_1aea192e0b2844aa497715bd6ee32c70f6" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>hyperrect</name></member>
      <member refid="classKBLASMemoryTreeNode_1aa248f97ec9616e4b4a1a5fa6e32f3071" prot="private" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>Hyperrect</name></member>
      <member refid="classKHPTree_1_1Node_1ae4ccd607f08fe1f3c9862a2d6eb242e7" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>includes</name></member>
      <member refid="classKHPTree_1_1Node_1a0c63b8b1be947244c0024c27a36ea133" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>k</name></member>
      <member refid="classKBLASMemoryTreeNode_1a8c72bb0566e42cc141fb3cec082cd5db" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>KBLASMemoryTreeNode</name></member>
      <member refid="classKBLASMemoryTreeNode_1a3261e3cb0619498d1af56f66560c992c" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>KBLASMemoryTreeNode</name></member>
      <member refid="classKBLASMemoryTreeNode_1a9af48af6b02237c3b647e7a3eda83306" prot="private" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>MemoryBlock</name></member>
      <member refid="classKBLASMemoryTreeNode_1a80876e7c9cddfbc623769be0a19c8287" prot="private" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>MemoryReplicate</name></member>
      <member refid="classKBLASMemoryTreeNode_1ad6659dafdf51161c5bad9d809d365b22" prot="private" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>MemoryReplicateAllocationView</name></member>
      <member refid="classKBLASMemoryTreeNode_1ac3bf425bd44de888242ce62059c30372" prot="private" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>Node</name></member>
      <member refid="classKHPTree_1_1Node_1a64333e8b576bca53bb320daac5a237ac" prot="public" virt="non-virtual" ambiguityscope="KHPTree&lt; K, KBLASMemoryTreeNodeSearch&lt; K &gt; &gt;::Node::"><scope>KBLASMemoryTreeNode</scope><name>Node</name></member>
      <member refid="classKHPTree_1_1Node_1a85f4d11eaafa130566ef72a6733ad186" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>parent</name></member>
      <member refid="classKBLASMemoryTreeNode_1a322f6127e52da8ee59741c10dd123821" prot="private" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>Partite</name></member>
      <member refid="classKBLASMemoryTreeNode_1a99767b5a521ea422319acc0a61bd48d6" prot="private" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>Search</name></member>
      <member refid="classKHPTree_1_1Node_1a935e122bba691f82056c3fa7fdfb76b6" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>size</name></member>
      <member refid="classKHPTree_1_1Node_1a7780a663865c27387e4ee3db055fbc27" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>size</name></member>
      <member refid="classKHPTree_1_1Node_1ad8de77d7e74e69d0c74ec45aaebcdc6b" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>st</name></member>
      <member refid="classKHPTree_1_1Node_1adc8df27fde80862737da414995901533" prot="public" virt="virtual"><scope>KBLASMemoryTreeNode</scope><name>update_includes</name></member>
      <member refid="classKHPTree_1_1Node_1a833100044f749f9e7c6b8cbf762e8940" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>update_includes_height</name></member>
      <member refid="classKHPTree_1_1Node_1aa00982d5bdc039d86e7a7e8ea6463fd2" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>update_includes_interval</name></member>
      <member refid="classKHPTree_1_1Node_1a5016dd640cb5bdc5a76c851b2e9279f2" prot="public" virt="non-virtual"><scope>KBLASMemoryTreeNode</scope><name>update_includes_size</name></member>
      <member refid="classKHPTree_1_1Node_1a2410c627921cb6f2b166262bae44a3a4" prot="public" virt="virtual"><scope>KBLASMemoryTreeNode</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
